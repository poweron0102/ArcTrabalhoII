.data
.text
main:
    DADDI R3, R0, 8        ; Incremento per gli indirizzi di memoria (8 byte per double word)
    DADDI R1, R0, 1024     ; Inizializza R1 con 1024 (indirizzo iniziale)
    DADDI R2, R0, 1024     ; Inizializza R2 con 1024 (indirizzo iniziale)
    DADDI R4, R0, 64       ; Offset per il loop unrolling (8 * 8 = 64 byte)
Loop:
    L.D F0, 0(R1)          ; Carica il 1° elemento in F0
    L.D F4, 8(R1)          ; Carica il 2° elemento in F4
    L.D F8, 16(R1)         ; Carica il 3° elemento in F8
    L.D F12, 24(R1)        ; Carica il 4° elemento in F12
    L.D F1, 32(R1)         ; Carica il 5° elemento in F1
    L.D F5, 40(R1)         ; Carica il 6° elemento in F5
    L.D F9, 48(R1)         ; Carica il 7° elemento in F9
    L.D F13, 56(R1)        ; Carica il 8° elemento in F13

    L.D F16, 0(R2)         ; Carica il 1° elemento in F16
    L.D F20, 8(R2)         ; Carica il 2° elemento in F20
    L.D F24, 16(R2)        ; Carica il 3° elemento in F24
    L.D F28, 24(R2)        ; Carica il 4° elemento in F28
    L.D F17, 32(R2)        ; Carica il 5° elemento in F17
    L.D F21, 40(R2)        ; Carica il 6° elemento in F21
    L.D F25, 48(R2)        ; Carica il 7° elemento in F25
    L.D F29, 56(R2)        ; Carica il 8° elemento in F29

    DSUB R1, R1, R4        ; Aggiorna R1 per la prossima iterazione (8 elementi)
    DSUB R2, R2, R4        ; Aggiorna R2 per la prossima iterazione (8 elementi)

    MUL.D F0, F0, F2       ; Moltiplica il 1° elemento per F2
    MUL.D F4, F4, F2       ; Moltiplica il 2° elemento per F2
    MUL.D F8, F8, F2       ; Moltiplica il 3° elemento per F2
    MUL.D F12, F12, F2     ; Moltiplica il 4° elemento per F2
    MUL.D F1, F1, F2       ; Moltiplica il 5° elemento per F2
    MUL.D F5, F5, F2       ; Moltiplica il 6° elemento per F2
    MUL.D F9, F9, F2       ; Moltiplica il 7° elemento per F2
    MUL.D F13, F13, F2     ; Moltiplica il 8° elemento per F2

    ADD.D F0, F0, F16      ; Aggiunge il 1° elemento di R2
    ADD.D F4, F4, F20      ; Aggiunge il 2° elemento di R2
    ADD.D F8, F8, F24      ; Aggiunge il 3° elemento di R2
    ADD.D F12, F12, F28    ; Aggiunge il 4° elemento di R2
    ADD.D F1, F1, F17      ; Aggiunge il 5° elemento di R2
    ADD.D F5, F5, F21      ; Aggiunge il 6° elemento di R2
    ADD.D F9, F9, F25      ; Aggiunge il 7° elemento di R2
    ADD.D F13, F13, F29    ; Aggiunge il 8° elemento di R2

    S.D F0, 64(R2)         ; Memorizza il risultato del 1° elemento
    S.D F4, 72(R2)         ; Memorizza il risultato del 2° elemento
    S.D F8, 80(R2)         ; Memorizza il risultato del 3° elemento
    S.D F12, 88(R2)        ; Memorizza il risultato del 4° elemento
    S.D F1, 96(R2)         ; Memorizza il risultato del 5° elemento
    S.D F5, 104(R2)        ; Memorizza il risultato del 6° elemento
    S.D F9, 112(R2)        ; Memorizza il risultato del 7° elemento
    S.D F13, 120(R2)       ; Memorizza il risultato del 8° elemento

    BNEZ R1, Loop          ; Ripeti il loop fino a quando R1 è zero
    HALT
